{"ast":null,"code":"var _jsxFileName = \"/Users/syeniganti/Documents/GitHub/PetGoHome/FrotEnd/src/components/Upload/upload.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"antd/dist/antd.css\";\nimport \"./index.css\";\nimport { Upload, Modal } from \"antd\";\nimport { PlusOutlined } from \"@ant-design/icons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar imgdata = \"\";\n\nfunction getBase64(file) {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    imgdata = reader.result;\n    reader.readAsDataURL(file);\n\n    reader.onload = () => resolve(reader.result);\n\n    reader.onerror = error => reject(error);\n  });\n}\n\nexport default class FileUpload extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      previewVisible: false,\n      previewImage: \"\",\n      previewTitle: \"\",\n      fileList: []\n    };\n\n    this.handleCancel = () => this.setState({\n      previewVisible: false\n    });\n\n    this.handlePreview = async file => {\n      if (!file.url && !file.preview) {\n        file.preview = await getBase64(file.originFileObj);\n      }\n\n      this.setState({\n        previewImage: file.url || file.preview,\n        previewVisible: true,\n        previewTitle: file.name || file.url.substring(file.url.lastIndexOf(\"/\") + 1)\n      });\n    };\n\n    this.handleChange = ({\n      fileList\n    }) => {\n      this.setState({\n        fileList\n      });\n      getBase64(fileList[0].originFileObj);\n    };\n  }\n\n  render() {\n    const {\n      previewVisible,\n      previewImage,\n      fileList,\n      previewTitle\n    } = this.state;\n\n    const uploadButton = /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(PlusOutlined, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: 8\n        },\n        children: \"Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this);\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Upload, {\n        action: \"https://www.mocky.io/v2/5cc8019d300000980a055e76\",\n        listType: \"picture-card\",\n        fileList: fileList,\n        onPreview: this.handlePreview,\n        onChange: this.handleChange,\n        children: fileList.length > 0 ? null : uploadButton\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        visible: previewVisible,\n        title: previewTitle,\n        footer: null,\n        onCancel: this.handleCancel,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          alt: \"example\",\n          style: {\n            width: \"100%\"\n          },\n          src: previewImage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n}","map":{"version":3,"sources":["/Users/syeniganti/Documents/GitHub/PetGoHome/FrotEnd/src/components/Upload/upload.js"],"names":["React","ReactDOM","Upload","Modal","PlusOutlined","imgdata","getBase64","file","Promise","resolve","reject","reader","FileReader","result","readAsDataURL","onload","onerror","error","FileUpload","Component","state","previewVisible","previewImage","previewTitle","fileList","handleCancel","setState","handlePreview","url","preview","originFileObj","name","substring","lastIndexOf","handleChange","render","uploadButton","marginTop","length","width"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"antd/dist/antd.css\";\nimport \"./index.css\";\nimport { Upload, Modal } from \"antd\";\nimport { PlusOutlined } from \"@ant-design/icons\";\n\nvar imgdata = \"\";\nfunction getBase64(file) {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    imgdata = reader.result;\n    reader.readAsDataURL(file);\n    reader.onload = () => resolve(reader.result);\n    reader.onerror = (error) => reject(error);\n  });\n}\n\nexport default class FileUpload extends React.Component {\n  state = {\n    previewVisible: false,\n    previewImage: \"\",\n    previewTitle: \"\",\n    fileList: [],\n  };\n\n  handleCancel = () => this.setState({ previewVisible: false });\n\n  handlePreview = async (file) => {\n    if (!file.url && !file.preview) {\n      file.preview = await getBase64(file.originFileObj);\n    }\n\n    this.setState({\n      previewImage: file.url || file.preview,\n      previewVisible: true,\n      previewTitle:\n        file.name || file.url.substring(file.url.lastIndexOf(\"/\") + 1),\n    });\n  };\n\n  handleChange = ({ fileList }) => {\n    this.setState({ fileList });\n    getBase64(fileList[0].originFileObj);\n  };\n\n  render() {\n    const { previewVisible, previewImage, fileList, previewTitle } = this.state;\n    const uploadButton = (\n      <div>\n        <PlusOutlined />\n        <div style={{ marginTop: 8 }}>Upload</div>\n      </div>\n    );\n    return (\n      <>\n        <Upload\n          action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\n          listType=\"picture-card\"\n          fileList={fileList}\n          onPreview={this.handlePreview}\n          onChange={this.handleChange}\n        >\n          {fileList.length > 0 ? null : uploadButton}\n        </Upload>\n        <Modal\n          visible={previewVisible}\n          title={previewTitle}\n          footer={null}\n          onCancel={this.handleCancel}\n        >\n          <img alt=\"example\" style={{ width: \"100%\" }} src={previewImage} />\n        </Modal>\n      </>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}